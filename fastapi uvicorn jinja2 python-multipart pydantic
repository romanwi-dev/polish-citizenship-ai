from fastapi import FastAPI, Depends
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import HTMLResponse
from fastapi.staticfiles import StaticFiles
from pathlib import Path

ROOT = Path(__file__).resolve().parents[1]
CLIENT = ROOT / "frontend" / "ai-citizenship-intake"
ADMIN  = ROOT / "frontend" / "admin"

app = FastAPI(title="Polish Citizenship Intake v2")

app.add_middleware(
    CORSMiddleware, allow_origins=["*"], allow_methods=["*"], allow_headers=["*"]
)

# serve the two frontends
app.mount("/static-intake", StaticFiles(directory=CLIENT), name="static-intake")
app.mount("/static-admin",  StaticFiles(directory=ADMIN),  name="static-admin")

@app.get("/_debug/paths")
def debug_paths():
    return {"routes":[r.path for r in app.router.routes]}

@app.get("/ai-citizenship-intake/", response_class=HTMLResponse)
def intake_page():
    return (CLIENT / "index.html").read_text(encoding="utf-8")

@app.get("/admin/", response_class=HTMLResponse)
def admin_page():
    return (ADMIN / "index.html").read_text(encoding="utf-8")

# minimal APIs
@app.post("/api/case/new")
def new_case():
    return {"ok": True, "case_id": 1}

@app.post("/api/chat")
def chat(message: dict):
    text = (message or {}).get("message","")
    return {"reply": f"Noted: {text}. What else?"}
